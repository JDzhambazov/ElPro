@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
	<Authorized>
		<nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light bg-white border-bottom box-shadow mb-3">
			<div class="container">
				<a class="navbar-brand" href="">ElPro</a>
				<button class="navbar-toggler" @onclick="ToggleNavMenu">
					<span class="navbar-toggler-icon"></span>
				</button>
				<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
					<ul class="navbar-nav mr-auto">
						<li class="nav-item">
							<NavLink class="nav-link text-dark" href="" Match="NavLinkMatch.All">
								<span class="oi oi-home" aria-hidden="true"></span> Home
							</NavLink>
						</li>
						<li class="nav-item">
							<NavLink class="nav-link text-dark" href="counter">
								<span class="oi oi-plus" aria-hidden="true"></span> Menu-II
							</NavLink>
						</li>
						<li class="nav-item dropdown show">
							<NavLink class="nav-link dropdown-toggle" @onclick="() => expandSubNavSettings = !expandSubNavSettings" id="navbarDropdown">
								<span class="oi oi-list-rich" aria-hidden="true"></span> Menu III
							</NavLink>
							@if (expandSubNavSettings)
							{
							<li class="dropdown-menu show" aria-labelledby="navbarDropdown" @onclick="() => expandSubNavSettings = !expandSubNavSettings">
							<li class="nav-item">
								<NavLink class="nav-link text-dark" href="fetchdata">
									<span class="oi oi-fork" aria-hidden="true"></span> Fetch
								</NavLink>
							</li>
							<li class="nav-item">
								<NavLink class="nav-link text-dark" href="counter">
									<span class="oi oi-command" aria-hidden="true"></span> Counter
								</NavLink>
							</li>
							<li class="nav-item">
								<NavLink class="nav-link text-dark" href="">
									<span class="oi oi-home" aria-hidden="true"></span> Home
								</NavLink>
							</li>
							</li>
							}
						</li>
						<li class="nav-item dropdown show">
							<NavLink class="nav-link dropdown-toggle" @onclick="() => expandSubNavSettings = !expandSubNavSettings" id="navbarDropdown">
								<span class="oi oi-list-rich" aria-hidden="true"></span> Profile
							</NavLink>
							@if (expandSubNavSettings)
							{
							<li class="dropdown-menu show" aria-labelledby="navbarDropdown" @onclick="() => expandSubNavSettings = !expandSubNavSettings">

							<li class="nav-item">
								<NavLink class="nav-link text-dark" href="authentication/register">
									<span class="oi oi-fork" aria-hidden="true"></span> Register
								</NavLink>
							</li>
							<li class="nav-item">
								<a href="authentication/profile">Hello, @context.User.Identity.Name!</a>
							</li>
							<li class="nav-item">
								<button class="nav-link btn btn-link" @onclick="BeginSignOut">Log out</button>
							</li>
							</li>
							}
						</li>
					</ul>
				</div>
			</div>
		</nav>
	</Authorized>
	<NotAuthorized>
		<a href="authentication/login">Log in</a>
	</NotAuthorized>
</AuthorizeView>


@code {
	bool collapseNavMenu = true;

	private bool expandSubNavSettings;


	string baseMenuClass = "navbar-collapse d-sm-inline-flex flex-sm-row-reverse";

	string NavMenuCssClass => baseMenuClass + (collapseNavMenu ? " collapse" : "");

	void ToggleNavMenu()
	{
		if (!expandSubNavSettings)
		{
			collapseNavMenu = !collapseNavMenu;
		}
	}

	private async Task BeginSignOut(MouseEventArgs args)
	{
		await SignOutManager.SetSignOutState();
		Navigation.NavigateTo("authentication/logout");
	}
}